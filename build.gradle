plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.test'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	runtimeOnly('com.h2database:h2')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'


	// QueryDsl
	implementation "com.querydsl:querydsl-core:5.0.0"
	implementation "com.querydsl:querydsl-collections"
	implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta")
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


def queryDslDri = "/generated/querydsl"

sourceSets {
	main.java.srcDirs += [queryDslDri]
}

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = file(queryDslDri)
}

clean.doLast {
	file(queryDslDri).deleteDir()
}


tasks.named('test') {
	jvmArgs "-XX:+UseZGC", "-Xms2G", "-Xmx4G"
	useJUnitPlatform()
}
